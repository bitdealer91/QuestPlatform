const fs = require('fs');
const path = require('path');

// –ß–∏—Ç–∞–µ–º —Ñ–∞–π–ª —Å –∑–∞–¥–∞—á–∞–º–∏
const tasksFile = path.join(__dirname, 'data', 'tasks.json');
const tasks = JSON.parse(fs.readFileSync(tasksFile, 'utf8'));

console.log('‚úÖ –ö–≤–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!');
console.log(`üìÖ –ü—Ä–æ–≥—Ä–∞–º–º–∞: ${tasks.programStart}`);
console.log(`üìö –ù–µ–¥–µ–ª—å: ${tasks.weeks}`);
console.log(`üéØ –ó–∞–¥–∞—á: ${tasks.tasks.length}`);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—à –∫–≤–µ—Å—Ç
const quest = tasks.tasks[0];
console.log('\nüéÆ –ö–≤–µ—Å—Ç MetaEggs: Dmitry:');
console.log(`   üìù –ù–∞–∑–≤–∞–Ω–∏–µ: ${quest.title}`);
console.log(`   üè∑Ô∏è  –¢–∏–ø: ${quest.type}`);
console.log(`   ‚≠ê –ó–≤–µ–∑–¥–∞: ${quest.star ? '–î–∞' : '–ù–µ—Ç'}`);
console.log(`   üí∞ XP: ${quest.xp}`);
console.log(`   üîó –°—Å—ã–ª–∫–∞: ${quest.href}`);
console.log(`   üè¢ –ë—Ä–µ–Ω–¥: ${quest.brand}`);
console.log(`   üé® –¶–≤–µ—Ç: ${quest.brand_color}`);
console.log(`   üìç –ù–µ–¥–µ–ª—è ${quest.week}, –î–µ–Ω—å ${quest.day}`);

// –ü—Ä–æ–≤–µ—Ä—è–µ–º API
console.log('\nüåê –ü—Ä–æ–≤–µ—Ä—è–µ–º API...');
const http = require('http');

const options = {
  hostname: 'localhost',
  port: 3000,
  path: '/api/week/1/tasks',
  method: 'GET'
};

const req = http.request(options, (res) => {
  let data = '';
  res.on('data', (chunk) => {
    data += chunk;
  });
  res.on('end', () => {
    try {
      const apiResponse = JSON.parse(data);
      console.log('‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
      console.log(`üìä –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–¥–∞—á: ${apiResponse.length}`);
      if (apiResponse[0]) {
        console.log(`üéØ –ü–µ—Ä–≤–∞—è –∑–∞–¥–∞—á–∞: ${apiResponse[0].title}`);
      }
    } catch (e) {
      console.log('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ API –æ—Ç–≤–µ—Ç–∞:', e.message);
    }
  });
});

req.on('error', (e) => {
  console.log('‚ùå –û—à–∏–±–∫–∞ API:', e.message);
});

req.end();


